{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoInfo","title","isCompleted","className","UserInfo","user","name","href","email","TodoList","todos","map","todo","completed","id","username","preparedTodos","userId","usersFromServer","find","App","useState","setTodos","setTitle","userName","setUserName","isTitle","setIsTitle","isUserName","setIsUserName","action","method","onSubmit","event","preventDefault","newUser","newTodo","length","addNewTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0950371.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  title: string;\n  isCompleted: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ title, isCompleted }) => (\n  <>\n    <h2 className=\"subtitle is-3\">{title}</h2>\n    <p className={`subtitle is-5 ${isCompleted ? 'has-text-success' : 'has-text-danger'}`}>\n      {isCompleted ? 'Done' : 'Not completed!'}\n    </p>\n  </>\n);\n","import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    {user && (\n      <>\n        <p className=\"subtitle is-5\" data-cy=\"username\">\n          {user.name}\n        </p>\n        <a href={`mailto:${user.email}`} data-cy=\"email\" className=\"has-text-info\">{user.email}</a>\n      </>\n    )}\n  </>\n);\n","import React from 'react';\nimport { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n\n  <ul className=\"block\">\n    {todos.map(todo => (\n      <li key={todo.id} className=\"box\">\n        <TodoInfo\n          title={todo.title}\n          isCompleted={todo.completed}\n        />\n        <UserInfo user={todo.user} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState, FormEvent } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => user.id === todo.userId) || null,\n}));\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState([...preparedTodos]);\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUserName, setIsUserName] = useState(false);\n\n  const addNewTodo = () => {\n    const newUser = usersFromServer.find(\n      user => user.name === userName,\n    ) || null;\n    let userId = 0;\n\n    if (newUser) {\n      userId = newUser.id;\n    }\n\n    const newTodo = {\n      id: todos[todos.length - 1].id + 1,\n      title,\n      userId,\n      completed: false,\n      user: newUser,\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const submitFunction = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userName || !title) {\n      setIsUserName(!userName);\n      setIsTitle(!title);\n\n      return;\n    }\n\n    addNewTodo();\n\n    setTitle('');\n    setUserName('');\n  };\n\n  const titleError = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitle(false);\n  };\n\n  const userError = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserName(event.target.value);\n    setIsUserName(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"field box\"\n        onSubmit={submitFunction}\n      >\n        <label htmlFor=\"title\">\n          <input\n            className=\"input is-primary\"\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={titleError}\n          />\n          {isTitle && (\n            <span>\n              Please enter the title\n            </span>\n          )}\n        </label>\n\n        <label htmlFor=\"selectUser\">\n          <select\n            className=\"dropdown is-large\"\n            aria-label=\"Default select example\"\n            value={userName}\n            id=\"selectUser\"\n            onChange={userError}\n          >\n            <option disabled value=\"\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isUserName && (\n            <span>\n              Please choose a user\n            </span>\n          )}\n        </label>\n\n        <button className=\"button is-black is-normal\" type=\"submit\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}